Sanwe is an attempt at writing a simple Prolog interpreter in F#. At the
moment it is very incomplete and pretty much unusable. I'm coding it as a way
to learn more about logic and functional programming, so there's no specific
devlopment schedule at the moment. I'm still very new to both Prolog and F#, so
I'd really appreciate any comments you might have about my code. Enjoy!

== What's here ==

* An ISO-compliant Prolog lexer and parser.
* A few (probably many, actually) unknown bugs.

== What's next (in rough descending order by priority) ==

* Get a unit testing setup of some sort.
* Write many parser test cases, particularly for expressions in operator
  notation.
* Write a simple interpreter core for pure Prolog (clause database and
  unification routine).
* Implement a REPL for executing queries.
* Implement cut support in unification.
* Write a simple implementation of consult/1, not/1, and a few other builtins.
* And so on...

== Building instructions ==

To build the provided Visual Studio solution, you will need Visual Studio 2010
Beta 2 (or newer). You'll also need to download the F# PowerPack included in
the F# October 2009 CTP (or newer) and place FSharp.PowerPack.dll in the same
directory as the project file. You can also try to build on Visual Studio 2008
or Mono using only the F# October 2009 CTP, but this is completely untested.
Your milage may vary, particularly if you choose the Mono route.
